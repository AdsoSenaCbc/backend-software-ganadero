"""fix backrefs

Revision ID: 9dfeb297ed0d
Revises: 2b5446ec2296
Create Date: 2025-07-22 12:54:36.665826

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9dfeb297ed0d'
down_revision = '2b5446ec2296'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('condiciones_especiales',
    sa.Column('id_condicion', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('ajuste_nutriente', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.PrimaryKeyConstraint('id_condicion')
    )
    op.create_table('departamento',
    sa.Column('id_departamento', sa.Integer(), nullable=False),
    sa.Column('nombre_departamento', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id_departamento')
    )
    op.create_table('especie',
    sa.Column('id_especie', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id_especie')
    )
    op.create_table('estado_animal',
    sa.Column('id_estado', sa.Integer(), nullable=False),
    sa.Column('nombre_estado', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id_estado')
    )
    op.create_table('etapas_productivas',
    sa.Column('id_etapa', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id_etapa')
    )
    op.create_table('ingrediente',
    sa.Column('id_ingrediente', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('tipo', sa.String(length=50), nullable=True),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('costo_kg', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.PrimaryKeyConstraint('id_ingrediente')
    )
    op.create_table('lote_vacuna',
    sa.Column('id_lote', sa.Integer(), nullable=False),
    sa.Column('codigo_lote', sa.String(length=50), nullable=False),
    sa.Column('fecha_vencimiento', sa.DateTime(), nullable=True),
    sa.Column('fabricante', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id_lote')
    )
    op.create_table('materia_prima',
    sa.Column('id_materia', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('fuente', sa.String(length=50), nullable=True),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id_materia')
    )
    op.create_table('nutrientes',
    sa.Column('id_nutriente', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=False),
    sa.Column('unidad', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id_nutriente')
    )
    op.create_table('raza',
    sa.Column('id_raza', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id_raza')
    )
    op.create_table('requerimientos_nrc',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('etapa', sa.String(length=50), nullable=False),
    sa.Column('peso', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.Column('produccion_leche', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.Column('grasa_leche', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.Column('em', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.Column('pc', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.Column('ms', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('observaciones', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sexo',
    sa.Column('id_sexo', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id_sexo')
    )
    op.create_table('tipo_evento',
    sa.Column('id_tipo_evento', sa.Integer(), nullable=False),
    sa.Column('nombre_tipo', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id_tipo_evento')
    )
    op.create_table('vacuna',
    sa.Column('id_vacuna', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('tipo', sa.String(length=50), nullable=True),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('dosis_recomendada', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.PrimaryKeyConstraint('id_vacuna')
    )
    op.create_table('caracteristicas_nutricionales',
    sa.Column('id_caracteristica', sa.Integer(), nullable=False),
    sa.Column('id_ingrediente', sa.Integer(), nullable=True),
    sa.Column('id_nutriente', sa.Integer(), nullable=True),
    sa.Column('valor', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.ForeignKeyConstraint(['id_ingrediente'], ['ingrediente.id_ingrediente'], ),
    sa.ForeignKeyConstraint(['id_nutriente'], ['nutrientes.id_nutriente'], ),
    sa.PrimaryKeyConstraint('id_caracteristica')
    )
    op.create_table('ingrediente_materia_prima',
    sa.Column('id_ingrediente', sa.Integer(), nullable=False),
    sa.Column('id_materia', sa.Integer(), nullable=False),
    sa.Column('cantidad_kg', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['id_ingrediente'], ['ingrediente.id_ingrediente'], ),
    sa.ForeignKeyConstraint(['id_materia'], ['materia_prima.id_materia'], ),
    sa.PrimaryKeyConstraint('id_ingrediente', 'id_materia')
    )
    op.create_table('municipio',
    sa.Column('id_municipio', sa.Integer(), nullable=False),
    sa.Column('nombre_municipio', sa.String(length=100), nullable=False),
    sa.Column('id_departamento', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_departamento'], ['departamento.id_departamento'], ),
    sa.PrimaryKeyConstraint('id_municipio')
    )
    op.create_table('requerimientos_nutricionales',
    sa.Column('id_requerimiento', sa.Integer(), nullable=False),
    sa.Column('id_etapa', sa.Integer(), nullable=True),
    sa.Column('peso_min', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.Column('peso_max', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.Column('id_nutriente', sa.Integer(), nullable=True),
    sa.Column('valor_min', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.Column('valor_max', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.Column('condicion', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['id_etapa'], ['etapas_productivas.id_etapa'], ),
    sa.ForeignKeyConstraint(['id_nutriente'], ['nutrientes.id_nutriente'], ),
    sa.PrimaryKeyConstraint('id_requerimiento')
    )
    op.create_table('consulta_bromatologica',
    sa.Column('id_consulta', sa.Integer(), nullable=False),
    sa.Column('fecha_consulta', sa.DateTime(), nullable=True),
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id_usuario'], ),
    sa.PrimaryKeyConstraint('id_consulta')
    )
    op.create_table('hacienda',
    sa.Column('id_hacienda', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('tel_contacto', sa.String(length=30), nullable=True),
    sa.Column('ubicacion', sa.Text(), nullable=True),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('id_departamento', sa.Integer(), nullable=True),
    sa.Column('id_municipio', sa.Integer(), nullable=True),
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_departamento'], ['departamento.id_departamento'], ),
    sa.ForeignKeyConstraint(['id_municipio'], ['municipio.id_municipio'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id_usuario'], ),
    sa.PrimaryKeyConstraint('id_hacienda')
    )
    op.create_table('requerimientos_condiciones',
    sa.Column('id_requerimiento', sa.Integer(), nullable=False),
    sa.Column('id_condicion', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_condicion'], ['condiciones_especiales.id_condicion'], ),
    sa.ForeignKeyConstraint(['id_requerimiento'], ['requerimientos_nutricionales.id_requerimiento'], ),
    sa.PrimaryKeyConstraint('id_requerimiento', 'id_condicion')
    )
    op.create_table('animal',
    sa.Column('id_animal', sa.Integer(), nullable=False),
    sa.Column('id_hacienda', sa.Integer(), nullable=True),
    sa.Column('id_raza', sa.Integer(), nullable=True),
    sa.Column('id_sexo', sa.Integer(), nullable=True),
    sa.Column('id_especie', sa.Integer(), nullable=True),
    sa.Column('id_estado', sa.Integer(), nullable=True),
    sa.Column('fecha_nacimiento', sa.DateTime(), nullable=True),
    sa.Column('peso_actual', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.Column('observaciones', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id_especie'], ['especie.id_especie'], ),
    sa.ForeignKeyConstraint(['id_estado'], ['estado_animal.id_estado'], ),
    sa.ForeignKeyConstraint(['id_hacienda'], ['hacienda.id_hacienda'], ),
    sa.ForeignKeyConstraint(['id_raza'], ['raza.id_raza'], ),
    sa.ForeignKeyConstraint(['id_sexo'], ['sexo.id_sexo'], ),
    sa.PrimaryKeyConstraint('id_animal')
    )
    op.create_table('consulta_ingredientes',
    sa.Column('id_consulta', sa.Integer(), nullable=False),
    sa.Column('id_ingrediente', sa.Integer(), nullable=False),
    sa.Column('resultado', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id_consulta'], ['consulta_bromatologica.id_consulta'], ),
    sa.ForeignKeyConstraint(['id_ingrediente'], ['ingrediente.id_ingrediente'], ),
    sa.PrimaryKeyConstraint('id_consulta', 'id_ingrediente')
    )
    op.create_table('historial_hacienda',
    sa.Column('id_historial', sa.Integer(), nullable=False),
    sa.Column('id_hacienda', sa.Integer(), nullable=True),
    sa.Column('fecha', sa.DateTime(), nullable=True),
    sa.Column('existencia_animales', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('area', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('estado', sa.String(length=50), nullable=True),
    sa.Column('observaciones', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id_hacienda'], ['hacienda.id_hacienda'], ),
    sa.PrimaryKeyConstraint('id_historial')
    )
    op.create_table('evento_animal',
    sa.Column('id_animal', sa.Integer(), nullable=False),
    sa.Column('id_evento', sa.Integer(), nullable=False),
    sa.Column('id_tipo_evento', sa.Integer(), nullable=True),
    sa.Column('fecha_evento', sa.DateTime(), nullable=True),
    sa.Column('valor', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.Column('observaciones', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id_animal'], ['animal.id_animal'], ),
    sa.ForeignKeyConstraint(['id_tipo_evento'], ['tipo_evento.id_tipo_evento'], ),
    sa.PrimaryKeyConstraint('id_animal', 'id_evento')
    )
    op.create_table('historial_animal',
    sa.Column('id_historial', sa.Integer(), nullable=False),
    sa.Column('id_animal', sa.Integer(), nullable=True),
    sa.Column('id_hacienda', sa.Integer(), nullable=True),
    sa.Column('fecha_ingreso', sa.DateTime(), nullable=True),
    sa.Column('fecha_salida', sa.DateTime(), nullable=True),
    sa.Column('observaciones', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id_animal'], ['animal.id_animal'], ),
    sa.ForeignKeyConstraint(['id_hacienda'], ['hacienda.id_hacienda'], ),
    sa.PrimaryKeyConstraint('id_historial')
    )
    op.create_table('nacimiento',
    sa.Column('id_nacimiento', sa.Integer(), nullable=False),
    sa.Column('id_cria', sa.Integer(), nullable=True),
    sa.Column('id_madre', sa.Integer(), nullable=True),
    sa.Column('id_padre', sa.Integer(), nullable=True),
    sa.Column('fecha_nacimiento', sa.DateTime(), nullable=True),
    sa.Column('peso_nacimiento', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.Column('tipo_parto', sa.String(length=50), nullable=True),
    sa.Column('complicaciones', sa.Text(), nullable=True),
    sa.Column('observaciones', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id_cria'], ['animal.id_animal'], ),
    sa.ForeignKeyConstraint(['id_madre'], ['animal.id_animal'], ),
    sa.ForeignKeyConstraint(['id_padre'], ['animal.id_animal'], ),
    sa.PrimaryKeyConstraint('id_nacimiento')
    )
    op.create_table('racion',
    sa.Column('id_racion', sa.Integer(), nullable=False),
    sa.Column('id_animal', sa.Integer(), nullable=True),
    sa.Column('id_requerimiento', sa.Integer(), nullable=True),
    sa.Column('fecha_calculo', sa.DateTime(), nullable=True),
    sa.Column('ms_total', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('calculado_por', sa.String(length=50), nullable=True),
    sa.Column('observaciones', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id_animal'], ['animal.id_animal'], ),
    sa.ForeignKeyConstraint(['id_requerimiento'], ['requerimientos_nutricionales.id_requerimiento'], ),
    sa.PrimaryKeyConstraint('id_racion')
    )
    op.create_table('vacunacion_animal',
    sa.Column('id_vacunacion', sa.Integer(), nullable=False),
    sa.Column('id_animal', sa.Integer(), nullable=True),
    sa.Column('id_vacuna', sa.Integer(), nullable=True),
    sa.Column('id_lote', sa.Integer(), nullable=True),
    sa.Column('fecha_aplicacion', sa.DateTime(), nullable=True),
    sa.Column('dosis_aplicada', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.Column('observaciones', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id_animal'], ['animal.id_animal'], ),
    sa.ForeignKeyConstraint(['id_lote'], ['lote_vacuna.id_lote'], ),
    sa.ForeignKeyConstraint(['id_vacuna'], ['vacuna.id_vacuna'], ),
    sa.PrimaryKeyConstraint('id_vacunacion')
    )
    op.create_table('detalle_racion',
    sa.Column('id_detalle', sa.Integer(), nullable=False),
    sa.Column('id_racion', sa.Integer(), nullable=True),
    sa.Column('id_ingrediente', sa.Integer(), nullable=True),
    sa.Column('cantidad_kg', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('porcentaje_ms', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['id_ingrediente'], ['ingrediente.id_ingrediente'], ),
    sa.ForeignKeyConstraint(['id_racion'], ['racion.id_racion'], ),
    sa.PrimaryKeyConstraint('id_detalle')
    )
    op.create_table('detalle_racion_nutricional',
    sa.Column('id_detalle_nut', sa.Integer(), nullable=False),
    sa.Column('id_racion', sa.Integer(), nullable=True),
    sa.Column('id_nutriente', sa.Integer(), nullable=True),
    sa.Column('valor_aportado', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.ForeignKeyConstraint(['id_nutriente'], ['nutrientes.id_nutriente'], ),
    sa.ForeignKeyConstraint(['id_racion'], ['racion.id_racion'], ),
    sa.PrimaryKeyConstraint('id_detalle_nut')
    )
    with op.batch_alter_table('rol_usuario', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_rol_usuario_nombre_rol', ['nombre_rol'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('rol_usuario', schema=None) as batch_op:
        batch_op.drop_constraint('uq_rol_usuario_nombre_rol', type_='unique')

    op.drop_table('detalle_racion_nutricional')
    op.drop_table('detalle_racion')
    op.drop_table('vacunacion_animal')
    op.drop_table('racion')
    op.drop_table('nacimiento')
    op.drop_table('historial_animal')
    op.drop_table('evento_animal')
    op.drop_table('historial_hacienda')
    op.drop_table('consulta_ingredientes')
    op.drop_table('animal')
    op.drop_table('requerimientos_condiciones')
    op.drop_table('hacienda')
    op.drop_table('consulta_bromatologica')
    op.drop_table('requerimientos_nutricionales')
    op.drop_table('municipio')
    op.drop_table('ingrediente_materia_prima')
    op.drop_table('caracteristicas_nutricionales')
    op.drop_table('vacuna')
    op.drop_table('tipo_evento')
    op.drop_table('sexo')
    op.drop_table('requerimientos_nrc')
    op.drop_table('raza')
    op.drop_table('nutrientes')
    op.drop_table('materia_prima')
    op.drop_table('lote_vacuna')
    op.drop_table('ingrediente')
    op.drop_table('etapas_productivas')
    op.drop_table('estado_animal')
    op.drop_table('especie')
    op.drop_table('departamento')
    op.drop_table('condiciones_especiales')
    # ### end Alembic commands ###
